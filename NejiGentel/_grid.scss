@use "sass:math";

//  grid colum variable
$grid-colum: 12;
// base conatiner class
.container {
  width: 100%;
  max-width: 1200px;
  box-sizing: border-box;
  padding: 0 20px;
  margin: 0 auto;
}

// row

.row {
  display: flex;
  flex-flow: row wrap;
}

// maps and lists
$grid-gap: (
  "0": 0,
  "1": 0.5rem,
  "2": 1rem,
  "3": 1.5rem,
  "4": 2rem,
);

$grid-justify: center, space-around, space-between, flex-start, flex-end;

// loops through maps and lists

@each $key, $val in $grid-gap {
  .gap-#{$key} > * {
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}
@each $val in $grid-justify {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// include sizes from _breakpoints

@include xs {
  @for $i from 1 through $grid-colum {
    .col-xs-#{$i} {
      width: math.div($i * 100%, $grid-colum);
      flex-grow: 0;
      box-sizing: border-box;
    }
  }
}
@include sm {
  @for $i from 1 through $grid-colum {
    .col-sm-#{$i} {
      width: math.div($i * 100%, $grid-colum);
      flex-grow: 0;
      box-sizing: border-box;
    }
  }
}
@include md {
  @for $i from 1 through $grid-colum {
    .col-md-#{$i} {
      width: math.div($i * 100%, $grid-colum);
      flex-grow: 0;
      box-sizing: border-box;
    }
  }
}
@include lg {
  @for $i from 1 through $grid-colum {
    .col-lg-#{$i} {
      width: math.div($i * 100%, $grid-colum);
      flex-grow: 0;
      box-sizing: border-box;
    }
  }
}
@include xl {
  @for $i from 1 through $grid-colum {
    .col-xl-#{$i} {
      width: math.div($i * 100%, $grid-colum);
      flex-grow: 0;
      box-sizing: border-box;
    }
  }
}
